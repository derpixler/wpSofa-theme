{"version":3,"sources":["webpack:///./template-parts/player/assets/js/fetchFeedpressHits.js","webpack:///./template-parts/player/assets/js/likeEpisode.js","webpack:///./template-parts/player/assets/js/player.js"],"names":["applyfilters","require","addFilter","resolve","mediaPlayerCollection","mediaPlayerCollectionLength","length","postIds","forEach","mediaPlayer","playerParentNode","node","parentNode","postId","dataset","push","xhr","XMLHttpRequest","onreadystatechange","readyState","hits","JSON","parse","responseText","hitsElem","querySelector","innerText","open","window","wpsofa","rest_url","setRequestHeader","send","join","fetchFeedpressHits","localstorageHandle","mediaPlayerObject","liked","get","hash","likeBtn","addEventListener","innerHTML","classList","remove","add","ajax_url","update","likeEpisode","options","storage_key","currentPos","selectors","player","controls","startStop","progressBar","progressBarStatus","duration","doFilter","then","this","players","cacheTime","collectPlayers","addEvents","self","selector","document","querySelectorAll","call","playerControls","playerSources","audio","sourcesNodes","source","type","getAttribute","currentTime","sources","map","event","e","playStop","currentTarget","seek","timeupdate","playStopElem","btn","classes","contains","play","pause","playerTimeUpdater","currTimeElem","percent","Math","floor","style","width","progress","src","setAttribute","split","formatSecondsAsTime","secs","hr","min","sec","mouse","offsetX","offsetWidth","module","exports"],"mappings":"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","file":"player-js.chunk.js","sourcesContent":["const applyfilters = require( 'applyfilters' );\n\nlet fetchFeedpressHits = ( mediaPlayerCollection ) => {\n\tmediaPlayerCollectionLength = mediaPlayerCollection.length;\n\tpostIds = [];\n\n\tif ( mediaPlayerCollectionLength > 0 ) {\n\t\tmediaPlayerCollection.forEach(mediaPlayer => {\n\t\t\tlet playerParentNode = mediaPlayer.node.parentNode;\n\t\t\tlet postId = playerParentNode != null ? playerParentNode.dataset.postId : null;\n\n\t\t\tif(postId){\n\t\t\t\tpostIds.push(postId);\n\t\t\t\tmediaPlayer.postId = postId;\n\t\t\t}\n\n\t\t});\n\n\t\tif ( postIds.length > 0 ) {\n\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\tif ( xhr.readyState === 4 ) {\n\t\t\t\t\tlet hits = JSON.parse(JSON.parse(xhr.responseText));\n\n\t\t\t\t\tif(hits != {}){\n\t\t\t\t\t\tmediaPlayerCollection.forEach(mediaPlayer => {\n\t\t\t\t\t\t\tlet hitsElem = mediaPlayer.node.parentNode.querySelector('.icon-cassette .hitsCount');\n\t\t\t\t\t\t\tif(hitsElem.innerText){\n\t\t\t\t\t\t\t\thitsElem.innerText = hits[mediaPlayer.postId];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.open( 'POST', window.wpsofa.rest_url + 'wpffph/v1/hits' );\n\t\t\txhr.setRequestHeader( \"Content-Type\", \"application/x-www-form-urlencoded\" );\n\t\t\txhr.send( \"ids=\" + postIds.join(','));\n\t\t}\n\t}\n};\n\napplyfilters.addFilter( 'mediaPlayerCollection', ( resolve, mediaPlayerCollection ) => {\n\tfetchFeedpressHits(mediaPlayerCollection);\n\tresolve();\n}, 1 );\n\n\n","const applyfilters = require( 'applyfilters' );\nconst localstorageHandle = require( '@web-dev-media/localstorage' );\n\nlet likeEpisode = ( mediaPlayerObject ) => {\n\tconst storageKey = '_episode_liked';\n\n\tif ( mediaPlayerObject ) {\n\t\tlet liked = localstorageHandle.get( mediaPlayerObject.hash + storageKey );\n\t\tlet likeBtn = mediaPlayerObject.node.parentNode.querySelector( '.episodeLike' );\n\n\t\tif ( liked === null ) {\n\n\t\t\tif ( likeBtn ) {\n\t\t\t\tlikeBtn.addEventListener( 'click', () => {\n\t\t\t\t\tlet liked = localstorageHandle.get( mediaPlayerObject.hash + storageKey );\n\n\t\t\t\t\tif ( liked === null ) {\n\t\t\t\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\t\t\t\txhr.onreadystatechange = function() {\n\t\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t\t\tlikeBtn.innerHTML = xhr.responseText;\n\t\t\t\t\t\t\t\tlikeBtn.classList.remove( 'icon-star-regular' );\n\t\t\t\t\t\t\t\tlikeBtn.classList.add( 'icon-star-solid' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\txhr.open( 'POST', window.wpsofa.ajax_url );\n\t\t\t\t\t\txhr.setRequestHeader( \"Content-Type\", \"application/x-www-form-urlencoded\" );\n\t\t\t\t\t\txhr.send( \"action=like_episode&post_id=\" + mediaPlayerObject.node.parentNode.dataset.postId );\n\n\t\t\t\t\t\tlocalstorageHandle.update( mediaPlayerObject.hash + storageKey, true );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t}else{\n\t\t\tlikeBtn.classList.remove('icon-star-regular');\n\t\t\tlikeBtn.classList.add('icon-star-solid');\n\t\t}\n\t}\n};\n\napplyfilters.addFilter( 'mediaPlayerObject', ( resolve, mediaPlayerObject ) => {\n\tlikeEpisode( mediaPlayerObject );\n\tresolve();\n}, 1 );\n\n\n","/**\n * here comes the wpSofa podcast media player\n */\n\nconst applyfilters = require( 'applyfilters' );\nconst localstorageHandle = require( '@web-dev-media/localstorage' );\nconst hash = require( 'object-hash' );\n\nclass mediaPlayer {\n\tconstructor() {\n\t\tlet options = {\n\t\t\tstorage_key: 'wpsofa-player-storage',\n\t\t\tcurrentPos : 0,\n\t\t\tselectors  : {\n\t\t\t\tplayer  : '.player',\n\t\t\t\tcontrols: {\n\t\t\t\t\tstartStop        : '.media-action',\n\t\t\t\t\tprogressBar      : '.progress',\n\t\t\t\t\tprogressBarStatus: '.progress .status',\n\t\t\t\t\tduration         : '.status'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tapplyfilters.doFilter( 'mediaPlayerOptions', options ).then(() => {\n\t\t\treturn options;\n\t\t});\n\n\t\tthis.options = options;\n\n\t\tthis.players = [];\n\n\t\tlocalstorageHandle.options.cacheTime = -1;\n\n\t\tthis.collectPlayers();\n\n\t\tif ( this.players.length > 0 ) {\n\t\t\tthis.addEvents();\n\t\t}\n\n\t\tapplyfilters.doFilter( 'mediaPlayerCollection', this.players ).then(() => {\n\t\t\treturn options;\n\t\t});\n\t}\n\n\t/**\n\t * registers a function  that use a filter/hook 'this.doFilter()'\n\t * this function can modify the code execution or data\n\t *\n\t * @param {string} filterName\n\t * @param {string} callback\n\t * @param {number} priority\n\t * @return {void}\n\t */\n\tcollectPlayers() {\n\t\tlet self = this;\n\n\t\tif ( self.options.selectors ) {\n\t\t\tlet selector = self.options.selectors.player;\n\n\t\t\tif ( selector ) {\n\t\t\t\tlet players = document.querySelectorAll( selector );\n\n\t\t\t\t[].forEach.call( players, function( player ) {\n\t\t\t\t\tlet playerControls = {};\n\t\t\t\t\tlet playerSources = {};\n\n\t\t\t\t\tlet audio = player.querySelector( 'audio' );\n\t\t\t\t\tlet sourcesNodes = audio.querySelectorAll( 'source' );\n\n\t\t\t\t\tif ( sourcesNodes ) {\n\t\t\t\t\t\t[].forEach.call( sourcesNodes, function( source ) {\n\t\t\t\t\t\t\tlet type = source.getAttribute( 'type' );\n\t\t\t\t\t\t\tplayerSources[ type ] = source.getAttribute( 'src' );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tfor ( selector in self.options.selectors.controls ) {\n\t\t\t\t\t\t\tplayerControls[ selector ] = player.querySelector( self.options.selectors.controls[ selector ] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplayerControls.currentTime = player.querySelector( '.current-time' );\n\n\t\t\t\t\t\tlet mediaPlayerObject = {\n\t\t\t\t\t\t\t\tnode        : player,\n\t\t\t\t\t\t\t\taudio       : audio,\n\t\t\t\t\t\t\t\tcontrols    : playerControls,\n\t\t\t\t\t\t\t\tsources     : playerSources,\n\t\t\t\t\t\t\t\tsourcesNodes: sourcesNodes,\n\t\t\t\t\t\t\t\thash        : hash( playerSources )\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tapplyfilters.doFilter( 'mediaPlayerObject', mediaPlayerObject ).then(() => {\n\t\t\t\t\t\t\treturn mediaPlayerObject;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tself.players.push(mediaPlayerObject);\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\taddEvents() {\n\t\tif ( this.players ) {\n\t\t\tthis.players.forEach( player => {\n\t\t\t\tlocalstorageHandle.update( player.hash + '_isPlaying', false );\n\n\t\t\t\t[ 'play', 'pause', 'timeupdate' ].map( event => {\n\t\t\t\t\tplayer.audio.addEventListener( event, ( e ) => this[ event ]( player ) );\n\t\t\t\t} );\n\n\t\t\t\tplayer.controls.startStop.addEventListener( 'click', ( e ) => this.playStop( e.currentTarget, player ) );\n\t\t\t\tplayer.controls.progressBar.addEventListener( 'click', ( e ) => this.seek( e, player ) );\n\n\t\t\t\tthis.timeupdate( player );\n\t\t\t} );\n\t\t}\n\t}\n\n\tplayStop( playStopElem, player ) {\n\t\tlet btn = playStopElem.querySelector( 'div' );\n\t\tconst classes = {\n\t\t\tplay : 'play',\n\t\t\tpause: 'pause'\n\t\t};\n\n\t\tif ( btn.classList.contains( classes.play ) ) {\n\t\t\tbtn.classList.remove( classes.play );\n\t\t\tbtn.classList.add( classes.pause );\n\n\t\t\tplayStopElem.classList.remove( classes.play );\n\t\t\tplayStopElem.classList.add( classes.pause );\n\n\t\t\tplayer.audio.play();\n\t\t\tplayer.audio.currentTime = localstorageHandle.get( player.hash + '_currentTime' );\n\t\t\tlocalstorageHandle.update( player.hash + '_isPlaying', true );\n\t\t} else {\n\t\t\tbtn.classList.remove( classes.pause );\n\t\t\tbtn.classList.add( classes.play );\n\n\t\t\tplayStopElem.classList.remove( classes.pause );\n\t\t\tplayStopElem.classList.add( classes.play );\n\n\t\t\tplayer.audio.pause();\n\t\t\tlocalstorageHandle.update( player.hash + '_isPlaying', false );\n\t\t}\n\t}\n\n\tplay( player ) {\n\t\tthis.playerTimeUpdater( player );\n\t}\n\n\tpause( player ) {\n\t\tthis.playerTimeUpdater( player );\n\t}\n\n\ttimeupdate( player ) {\n\t\tlet currentTime = player.audio.currentTime ? player.audio.currentTime : localstorageHandle.get( player.hash + '_currentTime' );\n\t\tlet duration = player.audio.duration ? player.audio.duration : localstorageHandle.get( player.hash + '_duration' );\n\n\t\tif ( currentTime ) {\n\t\t\tlet currTimeElem = player.controls.currentTime;\n\t\t\tlet percent = Math.floor( (\n\t\t\t\t100 / duration\n\t\t\t) * currentTime );\n\n\t\t\tplayer.controls.progressBarStatus.style.width = percent + '%';\n\n\t\t\tif ( percent > 85 ) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"85\";\n\t\t\t} else if ( percent > 70 ) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"70\";\n\t\t\t} else if ( percent > 45 ) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"45\";\n\t\t\t} else if ( percent > 15 ) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"15\";\n\t\t\t} else {\n\t\t\t\tcurrTimeElem.dataset.progress = \"0\";\n\t\t\t}\n\n\t\t\tif ( localstorageHandle.get( player.hash + '_isPlaying' ) === true && duration != null ) {\n\t\t\t\tlocalstorageHandle.update( player.hash + '_currentTime', player.audio.currentTime );\n\t\t\t\tlocalstorageHandle.update( player.hash + '_duration', player.audio.duration );\n\t\t\t}\n\n\t\t\t[].forEach.call( player.sourcesNodes, function( source ) {\n\t\t\t\tlet src = source.getAttribute( 'src' );\n\t\t\t\tsource.setAttribute( 'src', src.split( '#' )[ 0 ] + '#t=' + currentTime );\n\t\t\t} );\n\n\t\t\tthis.playerTimeUpdater( player );\n\t\t}\n\t}\n\n\tplayerTimeUpdater( player ) {\n\t\tlet currTimeElem = player.controls.currentTime;\n\t\tlet currentTime = player.audio.currentTime ? player.audio.currentTime : localstorageHandle.get( player.hash + '_currentTime' );\n\n\t\tif ( currentTime ) {\n\t\t\tcurrTimeElem.innerText = this.formatSecondsAsTime( currentTime );\n\t\t}\n\t}\n\n\tformatSecondsAsTime( secs ) {\n\t\tvar hr = Math.floor( secs / 3600 );\n\t\tvar min = Math.floor( (\n\t\t\tsecs - (\n\t\t\thr * 3600\n\t\t\t)\n\t\t) / 60 );\n\t\tvar sec = Math.floor( secs - (\n\t\t\thr * 3600\n\t\t) - (\n\t\t\tmin * 60\n\t\t) );\n\n\t\tif ( min < 10 ) {\n\t\t\tmin = \"0\" + min;\n\t\t}\n\t\tif ( sec < 10 ) {\n\t\t\tsec = \"0\" + sec;\n\t\t}\n\t\tif ( hr < 10 ) {\n\t\t\thr = \"0\" + hr;\n\t\t}\n\n\t\treturn hr + ':' + min + ':' + sec;\n\t}\n\n\tseek( mouse, player ) {\n\t\tlet percent = mouse.offsetX / player.node.offsetWidth;\n\t\tplayer.audio.currentTime = percent * player.audio.duration;\n\n\t\tlocalstorageHandle.update( player.hash + '_currentTime', player.audio.currentTime );\n\t\tlocalstorageHandle.update( player.hash + '_duration', player.audio.duration );\n\n\t\tthis.timeupdate( player );\n\t}\n}\n\nexports = module.exports = mediaPlayer;"],"sourceRoot":""}