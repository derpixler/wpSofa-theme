{"version":3,"sources":["webpack:///./template-parts/player/assets/js/player.js"],"names":["localstorageHandle","require","hash","mediaPlayer","this","options","storage_key","currentPos","selectors","player","controls","startStop","progressBar","progressBarStatus","duration","players","cacheTime","collectPlayers","length","addEvents","self","selector","document","querySelectorAll","forEach","call","playerControls","playerSources","audio","querySelector","sources","source","type","getAttribute","currentTime","push","node","map","event","addEventListener","e","playStop","currentTarget","seek","playStopElem","btn","classes","classList","contains","remove","add","play","pause","currTimeElem","get","innerText","formatSecondsAsTime","playerTimeUpdater","percent","Math","floor","style","width","dataset","progress","secs","hr","min","sec","mouse","offsetX","offsetWidth","module","exports"],"mappings":"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","file":"player-js.chunk.js","sourcesContent":["const localstorageHandle = require( '@web-dev-media/localstorage' );\nconst hash = require( 'object-hash' );\n\nclass mediaPlayer {\n\tconstructor() {\n\t\tthis.options = {\n\t\t\tstorage_key: 'wpsofa-player-storage',\n\t\t\tcurrentPos : 0,\n\t\t\tselectors  : {\n\t\t\t\tplayer  : '.player',\n\t\t\t\tcontrols: {\n\t\t\t\t\tstartStop  : '.media-action',\n\t\t\t\t\tprogressBar: '.progress',\n\t\t\t\t\tprogressBarStatus: '.progress .status',\n\t\t\t\t\tduration: '.status'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.players = [];\n\n\t\tlocalstorageHandle.options.cacheTime = -1;\n\n\t\tthis.collectPlayers();\n\n\t\tif(this.players.length > 0) {\n\t\t\tthis.addEvents();\n\t\t}\n\t}\n\n\tcollectPlayers() {\n\t\tlet self = this;\n\n\t\tif ( self.options.selectors ) {\n\t\t\tlet selector = self.options.selectors.player;\n\n\t\t\tif ( selector ) {\n\t\t\t\tlet players = document.querySelectorAll( selector );\n\n\t\t\t\t[].forEach.call( players, function( player ) {\n\t\t\t\t\tlet playerControls = {};\n\t\t\t\t\tlet playerSources = {};\n\n\t\t\t\t\tlet audio = player.querySelector( 'audio' );\n\t\t\t\t\tlet sources = player.querySelectorAll( 'source' );\n\n\t\t\t\t\tif ( sources && audio ) {\n\t\t\t\t\t\t[].forEach.call( sources, function( source ) {\n\t\t\t\t\t\t\tlet type = source.getAttribute( 'type' );\n\t\t\t\t\t\t\tplayerSources[ type ] = source.getAttribute( 'src' );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tfor ( selector in self.options.selectors.controls ) {\n\t\t\t\t\t\t\tplayerControls[ selector ] = player.querySelector( self.options.selectors.controls[ selector ] );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplayerControls.currentTime = player.querySelector( '.current-time' );\n\n\t\t\t\t\t\tself.players.push( {\n\t\t\t\t\t\t\tnode    : player,\n\t\t\t\t\t\t\taudio   : audio,\n\t\t\t\t\t\t\tcontrols: playerControls,\n\t\t\t\t\t\t\tsources : playerSources,\n\t\t\t\t\t\t\thash    : hash( playerSources )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\taddEvents() {\n\t\tif(this.players) {\n\t\t\tthis.players.forEach(player => {\n\t\t\t\t[ 'play', 'pause', 'timeupdate', 'loadeddata'].map( event => {\n\t\t\t\t\tplayer.audio.addEventListener( event, (e) => this[event](player) );\n\t\t\t\t});\n\n\t\t\t\tplayer.controls.startStop.addEventListener('click', (e) => this.playStop(e.currentTarget, player));\n\t\t\t\tplayer.controls.progressBar.addEventListener('click', (e) => this.seek(e, player));\n\n\t\t\t});\n\t\t}\n\t}\n\n\tplayStop(playStopElem, player){\n\t\tlet btn = playStopElem.querySelector('div');\n\t\tconst classes = {\n\t\t\tplay: 'play',\n\t\t\tpause: 'pause'\n\t\t};\n\n\t\tif(btn.classList.contains(classes.play)){\n\t\t\tbtn.classList.remove(classes.play);\n\t\t\tbtn.classList.add(classes.pause);\n\n\t\t\tplayStopElem.classList.remove(classes.play);\n\t\t\tplayStopElem.classList.add(classes.pause);\n\n\t\t\tplayer.audio.play();\n\t\t}else{\n\t\t\tbtn.classList.remove(classes.pause);\n\t\t\tbtn.classList.add(classes.play);\n\n\t\t\tplayStopElem.classList.remove(classes.pause);\n\t\t\tplayStopElem.classList.add(classes.play);\n\n\t\t\tplayer.audio.pause();\n\t\t}\n\t}\n\n\tplayerTimeUpdater(player){\n\t\tlet currTimeElem = player.controls.currentTime;\n\t\tlet currentTime = player.audio.currentTime ? player.audio.currentTime : localstorageHandle.get(player.hash + '_currentTime');\n\n\t\tif(player.audio.currentTime) {\n\t\t\tcurrTimeElem.innerText = this.formatSecondsAsTime( currentTime );\n\t\t}\n\t}\n\n\tplay(player){\n\t\tthis.playerTimeUpdater(player);\n\t}\n\n\tpause(player){\n\t\tthis.playerTimeUpdater(player);\n\t}\n\n\ttimeupdate(player){\n\t\tthis.playerTimeUpdater(player);\n\n\t\tif(player.audio.currentTime) {\n\t\t\tlet currTimeElem = player.controls.currentTime;\n\t\t\tlet percent = Math.floor( ( 100 / player.audio.duration) * player.audio.currentTime );\n\n\t\t\tplayer.controls.progressBarStatus.style.width = percent + '%';\n\n\t\t\tif (percent > 95) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"90\";\n\t\t\t} else if (percent > 80) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"75\";\n\t\t\t} else if (percent > 50) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"50\";\n\t\t\t} else if (percent > 25) {\n\t\t\t\tcurrTimeElem.dataset.progress = \"25\";\n\t\t\t} else {\n\t\t\t\tcurrTimeElem.dataset.progress = \"0\";\n\t\t\t}\n\n\t\t}\n\t}\n\n\tloadeddata(player){\n\t\t//console.log(player);\n\t}\n\n\tformatSecondsAsTime(secs) {\n\t\tvar hr  = Math.floor(secs / 3600);\n\t\tvar min = Math.floor((secs - (hr * 3600))/60);\n\t\tvar sec = Math.floor(secs - (hr * 3600) -  (min * 60));\n\n\t\tif (min < 10){\n\t\t\tmin = \"0\" + min;\n\t\t}\n\t\tif (sec < 10){\n\t\t\tsec  = \"0\" + sec;\n\t\t}\n\t\tif (hr < 10){\n\t\t\thr  = \"0\" + hr;\n\t\t}\n\n\t\treturn hr + ':' + min + ':' + sec;\n\t}\n\n\tseek(mouse, player) {\n\t\tlet percent = mouse.offsetX / player.node.offsetWidth;\n\t\tplayer.audio.currentTime = percent * player.audio.duration;\n\t\tplayer.controls.progressBarStatus.style.width = percent / 100 + '%';\n\t}\n\n}\n\nexports = module.exports = mediaPlayer;"],"sourceRoot":""}